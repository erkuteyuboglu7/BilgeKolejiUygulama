<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABFVJREFUeF7t
        mk2oVVUYhq8OJMkGkc4caIaBVqghCIGpGDYoMEsr6Qca9oONTLBUEHFuiVLDRIsiqkGUYSXYIKKRf1kQ
        QU3SUrFC+/P6fHu9Z52919333rN/znGdWA+8cO95v+/b77l69lp77zOSSCQSiUQiMQhGR0cXo23oMDqO
        fpHsZ3vtFbRI5f8PeENT0WPoDOqVb9EGNEVjhhPewHz0DarL12iexg0XBH8Q/W7voiGX0AMaOxwQeCX6
        29IHXEFvonXoVnSzZD/baweQ1YT8he7V+Lgh6Dz0q6UOeAfNUdm4UDMXvWsNAefQXJXFCQGnoK8sbY5/
        0SaV9Aw9L6o3z5co3hMj4R7PYhZ5VnZl6H3BjSiwQXZcEMz+9U9nEbu8J7sW9NvMD7NJXU7KjguCLXX5
        PH+i2bJrw4w5KDwxLpEdD4Ta6bJ5DspqDLPediM9O2TFA6G+cNk8j8pqDLM2upGez2TFA6G+d9k8t8lq
        DLNudyM9Z2TFA6HCXd8MWY1h1k1upOeSrHgg1B8um+dGWY1h1lD8Ab5z2TzzZTWGWeFH4LSseCBUP0+C
        4QbriKx4INQgl8HtsuKBUItcNo9dDTb+GDBjAfrHBua4U3Y8EKr1rbDBjA/cKE+cW2GDcGtdxgJbZFeG
        3q1uRIF4b44Qrt+Xw8dkxwsh+3lDZNL+KCDoRLfEDqGnkJ3cbkDT9fPT6C003LfEOlhgdNbSN8T+N63Q
        2OGC4E+iq/YuGvCMxg0PhF6PmjwPCLFZj2h8vBDSTmCfWOI+8TGK80RIsIfRRUs5Dj+h19FL2W/lbEZv
        oJ+z38q5gNbpsHFAoO1ZtLH8h2xJs1Vhqsqt/iQKOSHbfHueuApZr80oY5vKry8EedXlGYNdHS5QWQFe
        35FVFCm9wOF1WyKPZhVj2aOy6wMBXnY5ClxGdj9/3AcYeAutMKD0j2Xg2Q5zE7LZIVtVNlg48EMoXOJs
        zV6qktZh9jL0mx0oh2VYq5LBwAHtYWZ4wrNgd6mkb9gx0Hk7YA47MQ7uuSEHs+Uoj21fl8meFGpnZl1F
        bpE9KdTeg2x7nOcj2f2FA9lj7JDnZfcE9StcW4FKe33q7ZwQ0t+PAgew5elUdqgulf/y9DznWgtUfohK
        z6eu1WPLq19uW4fha7LDdLE1eqHsnqFnb9Zd5DXZPUPPHSjcJ9wnu30YHl6nH5JVCfrCO8jG57IrQZ9d
        QueplWlSGDwDhevwctmVoK/sMvms7ErQt9y1e+wBzXTZ7cHQ+7PxXX5Elb+tQc+srLucWSrrGXpsk/RD
        1t1ltez2YOhuN9uzT1Yl6CtbATrUuutD337X7tklqz0YGn5TY6OsStBXtgJ0qPV1GvqecO2e92W1B0Pt
        25t5FsuqBH1lK0CHyiuBQd/drt1zSlZ7MDS809vzzi0PfWUrQIe6K0G4s6x1Qp0QhoZbz2myKkHfRDdK
        664E01y754qsRCKRSCQSiUSilJGRaxyYDIoSnbazAAAAAElFTkSuQmCC
</value>
  </data>
</root>